buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.didi.virtualapk.plugin'


android {
    dataBinding {
        enabled = true
    }
    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        applicationId "com.lyc.live.livelove"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                UMENG_CHANNEL_VALUE:"own",
                GETUI_APP_ID : "123456",
                GETUI_APP_KEY : "123456",
                GETUI_APP_SECRET : "123456"
        ]
    }

    signingConfigs {
        debug {
            // 请配置好pub.key及其密码，或者改为使用debug.keystore
            storeFile file('debug.keystore')
        }
        release {
            storeFile file('debug.keystore')


//            storeFile file('****.jks')
//            storePassword STORE_PASSWORD
//            keyAlias KEY_ALIAS
//            keyPassword KEY_PASSWORD
//            v2SigningEnabled false
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "RELEASE_TIME", "\"Not yet\""
            buildConfigField "boolean", "DEVELOP_MODE", "true"
//            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField "String", "RELEASE_TIME", "\"2018/2/6\"" // TODO 发布前修改为当天日期
            buildConfigField "boolean", "DEVELOP_MODE", "false" // 关闭开发者模式
            proguardFiles 'proguard.cfg'
            minifyEnabled true
            shrinkResources true
            debuggable false
            jniDebuggable false
//            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // APK命名格式 own_Live&Love-v1.0.0_1_release.apk
                        def fileName = "${variant.productFlavors[0].name}_Live_v${defaultConfig.versionName}_${defaultConfig.versionCode}_release.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    productFlavors {
        own {}
    }
    sourceSets {
        main {
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //EventBus
    compile 'org.greenrobot:eventbus:3.1.1'

    //个推
    compile 'com.getui:sdk:2.10.2.0'

    //umeng 数据统计
    compile 'com.umeng.analytics:analytics:latest.integration'

    //RX android
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'

    // 网络
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.8.1'

    //retrofit
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'

    // 图库 Glide
    compile 'com.github.bumptech.glide:glide:4.0.0'
    compile "com.github.bumptech.glide:okhttp3-integration:4.0.0"
    compile ("com.github.bumptech.glide:recyclerview-integration:4.0.0") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'

    compile 'com.android.support:support-v4:27.0.2'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:support-annotations:25.3.1'

    testCompile 'junit:junit:4.12'
}

virtualApk {
    // 插件资源表中的packageId，需要确保不同插件有不同的packageId.
    packageId = 0x6f

    // 宿主工程application模块的路径，插件的构建需要依赖这个路径
    targetHost = '../Live/app'

    //默认为true，如果插件有引用宿主的类，那么这个选项可以使得插件和宿主保持混淆一致
    applyHostMapping = true
}
